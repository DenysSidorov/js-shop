version: '3'

services:
  #  front:
  #    build: ./front
  #    command: npm run start
  #    ports:
  #      - "3002:3002"

  frontend:
    build:
      dockerfile: Dockerfile.prod
      context: ./test-front
    container_name: test-front-cont
#    ports:
#      - "3000:3000"
    restart: unless-stopped
    command: serve -s build -l 3000
    networks:
      - test-shop-network

  t-server:
    build: ./test-server
    container_name: test-server-cont
    command: npm run start
    restart: unless-stopped
#    ports:
#      - "3001:3001"
    environment:
      - PORT=3001
      - HOST=http://my-prod.com
      - MONGO_URL=mongodb://t-db-api:27017/api
      - AUTH_API_URL=http://t-server-auth:3002/api
    depends_on:
      - t-db-api
    networks:
      - test-shop-network

  t-server-auth:
    build: ./test-auth
    container_name: test-server-auth-cont
    command: npm run start
    restart: unless-stopped
#    ports:
#      - "3002:3002"
    environment:
      - PORT=3002
      - HOST=http://my-prod.com
      - MONGO_URL=mongodb://t-db-auth:27017/auth
      - API_URL=http://t-server:3001/api
    depends_on:
      - t-db-auth
    networks:
      - test-shop-network

  t-db-api:
    image: mongo:latest
    container_name: test-db-api-cont
    volumes:
      #      local volume: path to container's folder
      - mongodb_api:/data/db
    networks:
      - test-shop-network

  t-db-auth:
    image: mongo:latest
    container_name: test-db-auth-cont
    volumes:
      - mongodb_auth:/data/db
    networks:
      - test-shop-network

  nginx:
    image: nginx:stable-alpine
    container_name: test-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - t-server-auth
      - t-server
    networks:
      - test-shop-network

volumes:
  # set some service's local volume to global scope
  mongodb_api:
  mongodb_auth:

networks:
  test-shop-network:
    driver: bridge
